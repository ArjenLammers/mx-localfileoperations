// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package localfileoperations.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the LocalFileOperations module
	public static void aCT_Delete(IContext context, localfileoperations.proxies.File _file)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("File", _file == null ? null : _file.getMendixObject());
		Core.microflowCall("LocalFileOperations.ACT_Delete").withParams(params).execute(context);
	}
	public static void aCT_Open(IContext context, localfileoperations.proxies.File _file, localfileoperations.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("File", _file == null ? null : _file.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("LocalFileOperations.ACT_Open").withParams(params).execute(context);
	}
	public static void aCT_Parent(IContext context, localfileoperations.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("LocalFileOperations.ACT_Parent").withParams(params).execute(context);
	}
	public static void aCT_ReadFile(IContext context, localfileoperations.proxies.File _file)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("File", _file == null ? null : _file.getMendixObject());
		Core.microflowCall("LocalFileOperations.ACT_ReadFile").withParams(params).execute(context);
	}
	public static localfileoperations.proxies.Explorer dS_GetExplorer(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("LocalFileOperations.DS_GetExplorer").withParams(params).execute(context);
		return result == null ? null : localfileoperations.proxies.Explorer.initialize(context, result);
	}
	public static java.util.List<localfileoperations.proxies.File> dS_ListFiles(IContext context, localfileoperations.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("LocalFileOperations.DS_ListFiles").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> localfileoperations.proxies.File.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void oCh_CurrentPath(IContext context, localfileoperations.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("LocalFileOperations.OCh_CurrentPath").withParams(params).execute(context);
	}
}
